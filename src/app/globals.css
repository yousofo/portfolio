@import "tailwindcss";

@custom-variant dark (&:where(.my-app-dark, .my-app-dark *));

@theme {
    --color-background: rgb(237, 237, 237);
    --color-foreground: rgb(23, 23, 23);
    --color-test: rgba(8, 8, 8, 0.8);
}

html {
    --background: rgb(237, 237, 237);
    --foreground: rgb(23, 23, 23);

    & .test{
        &::before {
            opacity: 0.7;
        }
    }
}

html.my-app-dark {
    --color-background: rgb(10, 10, 10);
    --color-foreground: rgb(237, 237, 237);

    & .test{
        &::before {
            opacity: 0.04 !important;
        }
    }
}

/* @media (prefers-color-scheme: dark) {
  :root {
    --background: 10, 10, 10;
    --foreground: 237, 237, 237;
  }
} */

/* Manual dark mode (overrides system preference) */

body {
    color: var(--color-foreground);
    background: var(--color-background);
    font-family: Arial, Helvetica, sans-serif;
    @apply transition-colors;
}
.mask-outer {
    mask: linear-gradient(
            180deg,
            rgba(0, 0, 0, 0) 20.983671171171174%,
            rgba(0, 0, 0, 0.28) 48.64864864864865%,
            rgba(0, 0, 0, 1) 79%
        )
        add;
}
.mask-inner {
    mask: radial-gradient(
            50% 47% at 50% 46.6%,
            rgba(0, 0, 0, 0) 6.103955518018017%,
            rgba(0, 0, 0, 0.1) 22.726632882882882%,
            rgba(0, 0, 0, 1) 64.53582488738738%,
            rgba(0, 0, 0, 0) 100%
        )
        add;
}
.test {
    /* backdrop-filter: blur(8px); */
    /* background-color:  rgba(8, 8, 8, 1); */
    position: relative;
    &::before {
        content: "";
        position: absolute;
        inset: 0;
        z-index: -1;
        width: 100%;
        height: 100%;
        background-image: url("data:image/svg+xml;utf8, <svg xmlns='http://www.w3.org/2000/svg'  width='100%' height='100%'> <filter id='noiseFilter'><feTurbulence type='fractalNoise' baseFrequency='0.4' numOctaves='8' stitchTiles='stitch'/></filter><rect width='100%' height='100%' filter='url(%23noiseFilter)'/></svg>");
        opacity: 0.1; /* adjust as needed */
    }
}
@keyframes circular {
    from {
        transform: rotate(0deg) translateX(100%) rotate(0deg);
    }
    to {
        transform: rotate(360deg) translateX(100%) rotate(-360deg);
    }
}
.circular {
    animation: circular 4s linear infinite;
}
.spinning-bullet {
    position: absolute;
    width: 100%;
    height: 100%;
    pointer-events: none;
    display: flex;
    justify-content: center;
    align-items: center;
    & span {
        width: 1px;
        height: 1px;
    }
}
.spinning-bullet-box {
    position: absolute;
    left: 50%;
    top: 50%;
    transform: translate(-50%, -50%);
}
